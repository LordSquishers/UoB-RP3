/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2306                                  |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    arch        "LSB;label=32;scalar=64";
    class       volScalarField;
    location    "0.017";
    object      yPlus;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 0 0 0 0 0 0];

internalField   uniform 0;

boundaryField
{
    upper
    {
        type            calculated;
        value           nonuniform List<scalar> 
150
(
52.992959
52.956881
52.951336
52.947853
52.95621
52.9735
52.999619
53.035253
53.080388
53.134375
53.196229
53.267271
53.348686
53.437819
53.537166
53.645919
53.762764
53.889138
54.023159
54.167842
54.323397
54.4875
54.660624
54.840751
55.029369
55.218641
55.408981
55.60205
55.795595
55.992844
56.194424
56.402991
56.619923
56.845449
57.082103
57.327775
57.579666
57.841922
58.119277
58.409675
58.709921
59.024521
59.354044
59.706534
60.078213
60.479664
60.899068
61.337055
61.78602
62.229878
62.663702
63.078075
63.467546
63.836976
64.209222
64.602155
64.996864
65.419129
65.884346
66.485544
67.288515
68.414111
70.0144
72.336566
75.14494
78.127715
81.124965
83.922274
86.314631
88.107669
89.095093
89.061947
87.549794
84.107311
78.780579
16.545497
21.608398
23.032212
24.7397
26.077508
27.291567
28.359016
29.321212
30.191855
30.986742
31.717845
32.39242
33.017477
33.601076
34.151482
34.679444
35.201345
35.699137
36.138528
36.555339
36.954941
37.339339
37.709091
38.066084
38.40686
38.737265
39.057776
39.370338
39.671669
39.96295
40.247314
40.526586
40.803362
41.076577
41.34645
41.613388
41.877845
42.140461
42.401166
42.660078
42.917763
43.174191
43.429128
43.683709
43.939112
44.195964
44.454963
44.715215
44.975717
45.237817
45.50244
45.768452
46.035061
46.303851
46.574432
46.848034
47.125623
47.405694
47.687329
47.972989
48.262963
48.555153
48.85056
49.149256
49.451994
49.760414
50.0764
50.399952
50.729341
51.06502
51.403974
51.743431
52.085644
52.43901
52.807902
)
;
    }
    lower
    {
        type            calculated;
        value           nonuniform List<scalar> 
150
(
57.631227
57.365183
57.122749
56.88451
56.655207
56.434674
56.22144
56.015091
55.816253
55.625227
55.441461
55.265442
55.095731
54.929585
54.769773
54.616629
54.46847
54.324783
54.182765
54.04381
53.906322
53.766082
53.619683
53.463491
53.302048
53.134432
52.964564
52.795596
52.62639
52.461419
52.304202
52.146699
51.983548
51.808665
51.619108
51.406388
51.168482
50.903271
50.616227
50.316001
50.016835
49.733411
49.434579
49.117515
48.767925
48.386781
47.959957
47.488468
46.960625
46.36629
45.715491
45.041546
44.385325
43.712762
42.986997
42.145037
41.136097
39.944891
38.525318
36.850216
34.863631
32.498266
29.529179
25.743739
20.64243
14.42577
7.3141642
9.1715827
18.830743
29.018644
40.555688
52.301773
63.747798
74.56317
83.57838
38.337717
41.606492
42.648244
43.738442
44.531611
45.214268
45.788472
46.289935
46.732016
47.126587
47.484054
47.809844
48.10835
48.384974
48.643527
48.88543
49.114103
49.33051
49.535838
49.731864
49.919854
50.101132
50.275978
50.445188
50.607612
50.763156
50.914587
51.063747
51.21028
51.354483
51.495155
51.633039
51.771866
51.906335
52.039333
52.170798
52.30204
52.432947
52.563795
52.693649
52.824807
52.956775
53.089886
53.221888
53.355915
53.490829
53.627562
53.764154
53.8993
54.031391
54.160439
54.287412
54.417254
54.552539
54.691576
54.832266
54.975106
55.119298
55.264983
55.412297
55.561645
55.711363
55.862585
56.013826
56.164915
56.31547
56.465538
56.615194
56.765427
56.91863
57.072621
57.2244
57.375179
57.527447
57.681753
)
;
    }
    inlet
    {
        type            calculated;
        value           uniform 0;
    }
    outlet
    {
        type            calculated;
        value           uniform 0;
    }
    back
    {
        type            empty;
    }
    front
    {
        type            empty;
    }
}


// ************************************************************************* //
